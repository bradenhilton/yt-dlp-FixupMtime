name: main

on:
  pull_request:
    branches: [main, master]
  push:
    branches: [main, master]
  schedule:
    - cron: "0 0 * * 1"

env:
  PIP_DISABLE_PIP_VERSION_CHECK: 1
  PIP_TRUSTED_HOST: "pypi.python.org pypi.org files.pythonhosted.org"

permissions: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-22.04
    if: github.event_name != 'schedule'
    permissions:
      contents: read
      pull-requests: read
    outputs:
      core: ${{ steps.filter.outputs.core }}
      workflow: ${{ steps.filter.outputs.workflow }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          persist-credentials: false

      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36
        id: filter
        with:
          list-files: json
          filters: |
            core:
              - added|modified: 'yt_dlp_plugins/**/*.py'
              - added|modified: 'test/**/*.py'
            workflow:
              - added|modified: '.github/workflows/main.yml'

  lint:
    runs-on: ubuntu-22.04
    needs: changes
    if: needs.changes.outputs.core == 'true' || needs.changes.outputs.workflow == 'true'
    permissions:
      contents: read
      pull-requests: read
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          persist-credentials: false

      - uses: astral-sh/ruff-action@57714a7c8a2e59f32539362ba31877a1957dded1
        with:
          version-file: pyproject.toml

      - run: ruff format --check

  test:
    runs-on: ${{ matrix.os }}
    needs: [changes, lint]
    permissions:
      contents: read
      pull-requests: read
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, windows-2022]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13", "pypy3.10"]
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          persist-credentials: false

      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: ${{ matrix.python-version }}

      - uses: astral-sh/setup-uv@557e51de59eb14aaaba2ed9621916900a91d50c6
        with:
          enable-cache: true
          cache-suffix: ${{ matrix.python-version }}
          cache-dependency-glob: "**/pyproject.toml"

      - name: Setup venv
        run: uv sync --python "${{ matrix.python-version }}"

      - name: Test
        run: uv run pytest "test/test_fixup_mtime.py"

  scheduled-test:
    runs-on: ${{ matrix.os }}
    if: github.event_name == 'schedule'
    permissions:
      contents: read
      pull-requests: read
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, windows-2022]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13", "pypy3.10"]
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          persist-credentials: false

      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: ${{ matrix.python-version }}

      - uses: astral-sh/setup-uv@557e51de59eb14aaaba2ed9621916900a91d50c6
        with:
          enable-cache: true
          cache-suffix: ${{ matrix.python-version }}
          cache-dependency-glob: "**/pyproject.toml"

      - name: Setup venv
        run: uv sync --python "${{ matrix.python-version }}"

      - name: Test
        run: uv run pytest "test/test_fixup_mtime.py"
